#!/bin/bash
# maze.sh

maze_game() {
    # –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫–∞—Ä—Ç –ª–∞–±–∏—Ä–∏–Ω—Ç–æ–≤
    declare -a maps=(
        "
####################
#@.................#
#.#####.#####.#####.#
#.#...#.#...#.#...#.#
#.#.###.#.###.#.###.#
#.#.#.....#.........#
#.#.#.#####.#######.#
#...#...........#...#
#####.#####.###.#.#.#
#.........#.....#.#.#
#.#######.#####.#.#.#
#.#.....#.#.....#.#.#
#.#.###.#.#.#####.#.#
#.#.#...#.#.......#.#
#.#.#.###.#######.#.#
#...#.............#.#
###.#.###########.#.#
#.....#...........#.X#
####################
"
        "
##########################
#@......................#
#.###.#############.#####
#...#...........#.....#.#
#.#.#########.#.#####.#.#
#.#.#.......#.#.#.....#.#
#.#.#.#####.#.#.#.#####.#
#.#.#.#...#.#.#.#.#...#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#...#
#.#.#.#.#.#.#.#.#.#.#####
#.#.#.#.#.#.#.#.#.#.....#
#.#.#.#.#.#.#.#.#.#####.#
#.#.#.#.#.#.#.#.#.....#.#
#.#.#.#.#.#.#.#.#####.#.#
#...#.#.#.#.#.#.....#.#.#
###.#.#.#.#.#.#####.#.#.#
#.....#.#.#.#.....#.#...#
#.#####.#.#.#####.#.###.#
#.#.....#.#.......#...#.#
#.#.#####.###########.#.#
#.#.................#...#
#######################X#
"
        "
####################
#@#................#
#.#.#############..#
#.#...........#.#..#
#.###########.#.#..#
#.............#.#..#
#.#############.#..#
#.#.............#..#
#.#.#############..#
#.#..............#.#
#.################.#
#.#..............#.#
#.#.#############.#
#.#.#.............#
#.#.#.#############
#.#.#...........#.#
#.#.###########.#.#
#.#.............#.#
#.###############.#
#................X#
####################
"
        "
########################
#@........................#
#.######################.#
#.#..................#...#
#.#.################.#.#.#
#.#.#.............#.#.#.#
#.#.#.#########.#.#.#.#.#
#.#.#.#.......#.#.#.#.#.#
#.#.#.#.#####.#.#.#.#.#.#
#.#.#.#.#...#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#.#.#.#.#.#.#.#.#.#.#.#.#
#...#.#.#.#.#.#.#.#.#...#
###.#.#.#.#.#.#.#.#.#####
#.....#.#.#.#.#.#.#.....#
#.#####.#.#.#.#.#.#####.#
#.#.....#.#.#.#.#.....#.#
#.#.#####.#.#.#.#####.#.#
#.#...................#.#
#######################X#
"
    )

    current_level=0
    total_levels=${#maps[@]}
    game_over=0
    player_x=0
    player_y=0
    exit_x=0
    exit_y=0
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
    choose_level() {
        clear
        echo -e "\033[1;35müß© –õ–ê–ë–ò–†–ò–ù–¢ üß©\033[0m"
        echo -e "\033[1;36m–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å (1-$total_levels) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ 0 –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:\033[0m"
        echo
        
        for ((i=0; i<total_levels; i++)); do
            echo -e "\033[1;33m$((i+1)). –£—Ä–æ–≤–µ–Ω—å $((i+1))\033[0m"
        done
        echo -e "\033[1;32m0. –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ\033[0m"
        echo
        
        while true; do
            read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice
            case $choice in
                0)
                    echo -e "\033[1;32m–ó–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è...\033[0m"
                    current_level=0
                    sleep 1
                    return
                    ;;
                [1-$total_levels])
                    current_level=$((choice-1))
                    echo -e "\033[1;32m–ó–∞–≥—Ä—É–∑–∫–∞ —É—Ä–æ–≤–Ω—è $choice...\033[0m"
                    sleep 1
                    return
                    ;;
                *)
                    echo -e "\033[1;31m–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\033[0m"
                    ;;
            esac
        done
    }
    
    # –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã
    load_map() {
        local level=$1
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –º–∞—Å—Å–∏–≤
        IFS=$'\n' read -d '' -r -a map <<< "${maps[level]}"
        
        # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –∏ –≤—ã—Ö–æ–¥
        for ((y=0; y<${#map[@]}; y++)); do
            line="${map[y]}"
            for ((x=0; x<${#line}; x++)); do
                if [[ ${line:$x:1} == "@" ]]; then
                    player_x=$x
                    player_y=$y
                elif [[ ${line:$x:1} == "X" ]]; then
                    exit_x=$x
                    exit_y=$y
                fi
            done
        done
    }
    
    # –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ª–∞–±–∏—Ä–∏–Ω—Ç–∞
    draw_maze() {
        clear
        echo -e "\033[1;35müß© –õ–ê–ë–ò–†–ò–ù–¢ üß©\033[0m"
        echo -e "\033[1;36m–£—Ä–æ–≤–µ–Ω—å: $((current_level+1))/$total_levels\033[0m"
        echo -e "\033[1;33m–ò—Å–ø–æ–ª—å–∑—É–π WASD –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è. –ù–∞–π–¥–∏ –≤—ã—Ö–æ–¥ X!\033[0m"
        echo -e "\033[1;32mQ - –≤—ã—Ö–æ–¥, R - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É—Ä–æ–≤–Ω—è\033[0m"
        echo
        
        for ((y=0; y<${#map[@]}; y++)); do
            line="${map[y]}"
            for ((x=0; x<${#line}; x++)); do
                char="${line:$x:1}"
                if [[ $x -eq $player_x && $y -eq $player_y ]]; then
                    echo -n "üòä"
                else
                    case $char in
                        "#") echo -n "üß±" ;;
                        "."|"@") echo -n "  " ;;
                        "X") echo -n "üö™" ;;
                        *) echo -n "  " ;;
                    esac
                fi
            done
            echo
        done
    }
    
    # –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–∞ –ø–æ–±–µ–¥—ã –Ω–∞ —É—Ä–æ–≤–Ω–µ
    show_level_complete() {
        clear
        echo -e "\033[1;32m"
        echo "  ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
        echo "  ‚ïë       –£–†–û–í–ï–ù–¨ –ü–†–û–ô–î–ï–ù!   ‚ïë"
        echo "  ‚ïë         –£—Ä–æ–≤–µ–Ω—å $((current_level+1))         ‚ïë"
        echo "  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
        echo -e "\033[0m"
        
        if [[ $((current_level+1)) -eq $total_levels ]]; then
            echo -e "\033[1;35müéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ —É—Ä–æ–≤–Ω–∏! üéâ\033[0m"
            return 1
        else
            echo -e "\033[1;36m–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é...\033[0m"
            sleep 2
            current_level=$((current_level+1))
            return 0
        fi
    }
    
    # –ì–ª–∞–≤–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª
    choose_level
    
    while [[ $game_over -eq 0 ]]; do
        load_map $current_level
        
        local level_complete=0
        while [[ $level_complete -eq 0 && $game_over -eq 0 ]]; do
            draw_maze
            
            if [[ $player_x -eq $exit_x && $player_y -eq $exit_y ]]; then
                level_complete=1
                continue
            fi
            
            read -rsn1 direction
            new_x=$player_x
            new_y=$player_y
            
            case $direction in
                w) ((new_y--)) ;;
                s) ((new_y++)) ;;
                a) ((new_x--)) ;;
                d) ((new_x++)) ;;
                r|R)
                    echo -e "\033[1;33m–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É—Ä–æ–≤–Ω—è...\033[0m"
                    sleep 1
                    load_map $current_level
                    continue
                    ;;
                q|Q)
                    echo -e "\033[1;31m–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã...\033[0m"
                    game_over=1
                    break
                    ;;
            esac
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å–æ —Å—Ç–µ–Ω–æ–π
            if [[ $new_y -ge 0 && $new_y -lt ${#map[@]} && $new_x -ge 0 && $new_x -lt ${#map[$new_y]} ]]; then
                if [[ ${map[$new_y]:$new_x:1} != "#" ]]; then
                    player_x=$new_x
                    player_y=$new_y
                fi
            fi
        done
        
        if [[ $level_complete -eq 1 && $game_over -eq 0 ]]; then
            if show_level_complete; then
                continue
            else
                game_over=1
            fi
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ UTF-8
if [[ $(locale charmap) != "UTF-8" ]]; then
    echo "–í–Ω–∏–º–∞–Ω–∏–µ: –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å UTF-8"
    sleep 2
fi

maze_game
