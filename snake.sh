#!/bin/bash
# snake.sh

snake_game() {
    local width=20
    local height=15
    local snake_x=10
    local snake_y=7
    local food_x=5
    local food_y=5
    local score=0
    local game_over=0
    local direction=right
    local snake_size=1
    declare -a snake_body=("$snake_x:$snake_y")
    
    # –¶–≤–µ—Ç–∞ –∏ —Å–∏–º–≤–æ–ª—ã
    local border_color="\033[1;36m"
    local score_color="\033[1;33m"
    local game_over_color="\033[1;31m"
    local snake_head="üü¢"
    local snake_body_char="üü©"
    local food_char="üçé"
    local empty_char="  "
    local border_char="‚ñì‚ñì"

    draw_border() {
        # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
        echo -ne "${border_color}"
        for ((i=0; i<width+2; i++)); do
            echo -n "$border_char"
        done
        echo -e "\033[0m"
    }

    draw_game() {
        clear
        echo -e "\033[1;35müéÆ –ó–ú–ï–ô–ö–ê üéÆ\033[0m"
        echo -e "${score_color}–°—á—ë—Ç: $score\033[0m"
        echo
        
        draw_border
        
        for ((y=0; y<height; y++)); do
            # –õ–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
            echo -ne "${border_color}${border_char}\033[0m"
            
            for ((x=0; x<width; x++)); do
                local cell_empty=1
                local is_head=0
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–ª–æ–≤—ã –∑–º–µ–π–∫–∏
                if [[ $x -eq $snake_x && $y -eq $snake_y ]]; then
                    echo -n "$snake_head"
                    cell_empty=0
                    is_head=1
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ–¥—ã
                elif [[ $x -eq $food_x && $y -eq $food_y ]]; then
                    echo -n "$food_char"
                    cell_empty=0
                else
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–∞ –∑–º–µ–π–∫–∏
                    for ((i=1; i<${#snake_body[@]}; i++)); do
                        IFS=':' read -r seg_x seg_y <<< "${snake_body[i]}"
                        if [[ $x -eq $seg_x && $y -eq $seg_y ]]; then
                            echo -n "$snake_body_char"
                            cell_empty=0
                            
                            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è –≥–æ–ª–æ–≤—ã —Å —Ç–µ–ª–æ–º
                            if [[ $is_head -eq 1 ]]; then
                                game_over=1
                            fi
                            break
                        fi
                    done
                fi
                
                # –ü—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞
                [[ $cell_empty -eq 1 ]] && echo -n "$empty_char"
            done
            
            # –ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
            echo -ne "${border_color}${border_char}\033[0m"
            echo
        done
        
        draw_border
        echo
        echo -e "\033[1;37m–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: W,A,S,D - –¥–≤–∏–∂–µ–Ω–∏–µ, Q - –≤—ã—Ö–æ–¥\033[0m"
    }

    place_food() {
        local valid_position=0
        while [[ $valid_position -eq 0 ]]; do
            food_x=$((RANDOM % width))
            food_y=$((RANDOM % height))
            valid_position=1
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –µ–¥–∞ –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –Ω–∞ –∑–º–µ–π–∫–µ
            for segment in "${snake_body[@]}"; do
                IFS=':' read -r seg_x seg_y <<< "$segment"
                if [[ $food_x -eq $seg_x && $food_y -eq $seg_y ]]; then
                    valid_position=0
                    break
                fi
            done
        done
    }

    # –ù–∞—á–∞–ª—å–Ω–∞—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ–¥—ã
    place_food

    while [[ $game_over -eq 0 ]]; do
        draw_game
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–º –æ—Ç–∫–ª–∏–∫–æ–º
        read -rsn1 -t 0.2 input
        case $input in
            w|W) [[ $direction != "down" ]] && direction=up ;;
            s|S) [[ $direction != "up" ]] && direction=down ;;
            a|A) [[ $direction != "right" ]] && direction=left ;;
            d|D) [[ $direction != "left" ]] && direction=right ;;
            q|Q) game_over=1 ;;
        esac

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –≥–æ–ª–æ–≤—ã
        local prev_x=$snake_x
        local prev_y=$snake_y

        # –î–≤–∏–∂–µ–Ω–∏–µ –∑–º–µ–π–∫–∏
        case $direction in
            up) ((snake_y--)) ;;
            down) ((snake_y++)) ;;
            left) ((snake_x--)) ;;
            right) ((snake_x++)) ;;
        esac

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–π —Å–æ —Å—Ç–µ–Ω–∫–∞–º–∏
        if [[ $snake_x -lt 0 || $snake_x -ge $width || $snake_y -lt 0 || $snake_y -ge $height ]]; then
            game_over=1
        fi

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è –≥–æ–ª–æ–≤—ã —Å —Ç–µ–ª–æ–º
        for ((i=1; i<${#snake_body[@]}; i++)); do
            IFS=':' read -r seg_x seg_y <<< "${snake_body[i]}"
            if [[ $snake_x -eq $seg_x && $snake_y -eq $seg_y ]]; then
                game_over=1
                break
            fi
        done

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ–¥—ã
        if [[ $snake_x -eq $food_x && $snake_y -eq $food_y ]]; then
            ((score+=5))
            ((snake_size++))
            snake_body=("$snake_x:$snake_y" "${snake_body[@]}")
            place_food
        else
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–ª–∞ –∑–º–µ–π–∫–∏
            snake_body=("$snake_x:$snake_y" "${snake_body[@]:0:$(($snake_size-1))}")
        fi
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
        sleep 0.1
    done

    echo -e "${game_over_color}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë       –ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê!     ‚ïë"
    echo "‚ïë     –í–∞—à —Å—á—ë—Ç: $score$(printf '%*s' $((7-${#score})) ' ')‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "\033[0m"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ UTF-8
if [[ $(locale charmap) != "UTF-8" ]]; then
    echo "–í–Ω–∏–º–∞–Ω–∏–µ: –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å UTF-8"
fi

snake_game
